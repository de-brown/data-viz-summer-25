---
title: "Problem Set 1"
author: "Diane Brown"
---

```{r setup-analysis echo=FALSE, message=FALSE}

library(dplyr)
library(readr)
library(ggplot2)
library(forcats)
library(rio)

```

Load My Dataset for Problem Set 1 (Combined Cleaned NSCH 2016-2020 Dataset)

```{r load-data-set}

nsch_clean <- import("data/nsch_clean.rds")
head(nsch_clean)


```

Creating a Bar Chart of the Data

```{r bar_chart}

nsch_bar1 <- nsch_clean %>% 
  ggplot(aes(x=sex))+
  geom_bar()+
  theme_minimal()+
  labs(x = "Sex of Child", 
       y = "Count", 
       title = "Number of Children by Sex",
       subtitle = "NSCH data, 2016-2020")
  

nsch_bar1
```

Bar charts are best for categorical variables (like sex, race, or make of vehicle as discussed in class). They should not be used for continuous variables, but instead for discrete variables (where there is a count), like number of office visits. It can highlight the differences between variables, with frequency. Or you can do more advanced bar graphs with facet wraps, where you compare across groups. The code below from another project of mine will not work here since I have not entered all the pre-work, but it shows how advanced a bar chart can get.

```{r plot_2 eval = false}
##Creating a subset of data to allow for a bar plot of positive & negative neighborhood characteristics side by side

nsch_plot_setup <- nsch_clean %>% ## subset of data includes other variables that will be in plot or might be in other plots in the future 
  select(hhid, positive_features2, detracting_features2, childhlth2, social_coh, safe, safe2) %>% 
  pivot_longer(cols = c(positive_features2, detracting_features2), 
               names_to = "features", 
               values_to = "presence") %>% 
mutate(features = factor(features, levels = c("positive_features2", "detracting_features2"), 
                             labels = c("Positive Features", 
                                        "Detracting Features")))

##using subset of data for new plot

nsch_plot2 <- nsch_plot_setup %>%
  ## filter NA's from plot 
  filter(!is.na(childhlth2)) %>% filter(!is.na(features)) %>% filter(!is.na(presence)) %>% ggplot() + 
  ## using subset of data labels to create geom_bar, and then using "dodge" so they are not a stacked barplot 
  geom_bar(aes(x = presence, fill = features), position = "dodge") + 
  ## change to log10 scale to make data easier to interpret with wide range of counts in facet_wrap 
  ## using scales package to change log labels to more readable exponents 
  scale_y_continuous(trans = "log10", breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) + 
  ## copying formatting from previous plot, except the addition of labels for x-axis and change colors manually, rather than using palette 
  theme_bw() + 
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank()) + 
  scale_fill_manual(values = c("#117733", "#882255")) + 
  labs(title = "Quality of Neighborhood Characteristics\n by Overall Children's Health", 
       subtitle = "NSCH data, 2016-2020", 
       y = "# of Children", 
       x = "Presence of Neighborhood Characteristics", 
       fill = "Neighborhood\n Characteristic\n Type") + 
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10), 
        axis.title.x = element_text(size = 10, face = "bold", margin = margin(10,0,0,0)), axis.title.y = element_text(size = 10, face = "bold", margin = margin(0,10,0,0)),
        axis.ticks.x = element_blank(), 
        strip.text.x = element_text(size = 10, color = "black", face = "bold"), 
        strip.background.x = (element_rect("lightgrey")), 
        plot.title = element_text(size = 14, face = "bold", hjust = 0.5), 
        plot.subtitle = element_text(size = 12, face ="italic", hjust = 0.5), 
        legend.title = element_text (size = 10, face = "bold", hjust = 0.5), 
        legend.text = element_text(size = 8), 
        legend.background = element_rect(color= "black", fill = "lightgrey")) + facet_wrap(~childhlth2) 

nsch_plot2
```

Creating a Scatterplot of the MTCARS Data

```{r scatterplot}

mtcars_scatter1 <- df %>% 
  ggplot(aes(x=hp, y =wt))+
  geom_point()+
  theme_minimal()+
  labs(
    x = "Horsepower",
    y = "Weight of Vehicle", 
    title = "Horsepower of Vehicle by Weight"
    )

mtcars_scatter1

```

Scatterplots are best for two continuous numeric variables. For health data, this can be age and weight or number of doctor visits. Unfortunately, my clean NSCH dataset did not have two continuous numeric variables that would provide a meaninful scatterplot (only child's age and caregiver's age), so I used MTCARS data instead. Scatterplots can be used to explore a relationship between data, as well as any groupings of data. It can also show outliers.

Creating a Histogram

```{r histogram}

nsch_histogram1 <- nsch_clean %>% 
  ggplot(aes(x=childage))+
  geom_histogram(binwidth = 1)+
  theme_minimal()+
  labs(x = "Age (years)", 
       title = "Distribution of Child Age",
       subtitle = "NSCH data, 2016-2020")
  

nsch_histogram1
```

Histograms are good for continuous or discrete numeric variables. They should not be used for categorical variables. They can show a distribution of data (used in epidemiology a lot), including frequency, outliers, spread, etc.
